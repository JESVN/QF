//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace QFramework.Example
{
    using System;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;
    using UnityEngine;
    using UnityEngine.UI;
    
    
    public class GameEventData : QFramework.UIPanelData
    {
    }
    
    public partial class GameEvent : QFramework.UIPanel,ISingleton
    {
        private Color defaultColor=Color.white;
        protected override void ProcessMsg(int eventId, QFramework.QMsg msg)
        {
            switch (eventId)
            {
                // 处理事件
                case (int) UIEventID.MenuPanel.ChangeGameingColor:
                    Log.I("{0}:Process EventId {1}", Transform.name, eventId);
                    this.Gameing.BG.color = Color.red;
                    break;
                // 处理事件
                case (int) UIEventID.MenuPanel.ChangeMainColor:
                    Log.I("{0}:Process EventId {1}", Transform.name, eventId);
                    if (this.Main.BG.color == Color.red)
                        this.Main.BG.color = defaultColor;
                    else
                        this.Main.BG.color = Color.red;
                    break;
            }
        }
        
        protected override void OnInit(QFramework.IUIData uiData)
        {
            mData = uiData as GameEventData ?? new GameEventData();
            defaultColor = this.Main.BG.color;
            // 注册事件
            RegisterEvent(UIEventID.MenuPanel.ChangeGameingColor);
            RegisterEvent(UIEventID.MenuPanel.ChangeMainColor);
            this.Main.CloseButton.onClick.AddListener(() =>
            {
                this.Hide();
                UIKit.HidePanel<ClickPanel>();
            });
            this.Gameing.ExitButton.onClick.AddListener(() =>
            {
                this.Gameing.gameObject.SetActive(false);
                this.Main.gameObject.SetActive(true);
            });
            this.Main.StartButton.onClick.AddListener(() =>
            {
                this.Main.gameObject.SetActive(false);
                this.Gameing.gameObject.SetActive(true);
                //内部发送事件
                SendEvent(UIEventID.MenuPanel.ChangeGameingColor);
            });
            this.Main.ExitButton.onClick.AddListener(() =>
            {
#if UNITY_EDITOR
                UnityEditor.EditorApplication.isPlaying = false;
#else
                Application.Quit();
#endif
            });
        }
        
        protected override void OnOpen(QFramework.IUIData uiData)
        {
        }
        
        protected override void OnShow()
        {
        }
        
        protected override void OnHide()
        {
            if(defaultColor!=Color.white)
                this.Main.BG.color = defaultColor;
        }
        
        protected override void OnClose()
        {
        }
        public static GameEvent Instance
        {
            get { return MonoSingletonProperty<GameEvent>.Instance;}
        }
        public void OnSingletonInit()
        {
            Debug.Log($"单例初始化完成[{name}](只执行一次)");
        }
        /// <summary>
        /// 返回主界面背景颜色(单例测试)
        /// </summary>
        /// <returns></returns>
        public Color GetColor()
        {
            return defaultColor;
        }
    }
}
